{
  "runtimeInfo": {
    "panaVersion": "{{pana-version}}",
    "sdkVersion": "{{sdk-version}}",
    "flutterVersions": {}
  },
  "packageName": "audio_service",
  "packageVersion": "0.17.0",
  "pubspec": {
    "name": "audio_service",
    "description": "Flutter plugin to play audio in the background while the screen is off.",
    "version": "0.17.0",
    "homepage": "https://github.com/ryanheise/audio_service",
    "environment": {
      "sdk": ">=2.12.0 <3.0.0",
      "flutter": ">=1.12.13+hotfix.5"
    },
    "dependencies": {
      "audio_session": "^0.1.0",
      "rxdart": "^0.26.0",
      "flutter_isolate": "^2.0.0",
      "flutter_cache_manager": "^3.0.0",
      "js": "^0.6.3",
      "flutter": {
        "sdk": "flutter"
      },
      "flutter_web_plugins": {
        "sdk": "flutter"
      }
    },
    "dev_dependencies": {
      "flutter_test": {
        "sdk": "flutter"
      },
      "mockito": "^5.0.0"
    },
    "flutter": {
      "plugin": {
        "platforms": {
          "android": {
            "package": "com.ryanheise.audioservice",
            "pluginClass": "AudioServicePlugin"
          },
          "ios": {
            "pluginClass": "AudioServicePlugin"
          },
          "macos": {
            "pluginClass": "AudioServicePlugin"
          },
          "web": {
            "pluginClass": "AudioServicePlugin",
            "fileName": "audio_service_web.dart"
          }
        }
      }
    }
  },
  "licenseFile": {
    "path": "LICENSE",
    "name": "MIT"
  },
  "allDependencies": [
    "async",
    "audio_session",
    "characters",
    "charcode",
    "clock",
    "collection",
    "crypto",
    "ffi",
    "file",
    "flutter",
    "flutter_cache_manager",
    "flutter_isolate",
    "flutter_test",
    "flutter_web_plugins",
    "http",
    "http_parser",
    "js",
    "meta",
    "mockito",
    "path",
    "path_provider",
    "path_provider_android",
    "path_provider_ios",
    "path_provider_linux",
    "path_provider_macos",
    "path_provider_platform_interface",
    "path_provider_windows",
    "pedantic",
    "platform",
    "plugin_platform_interface",
    "process",
    "rxdart",
    "sky_engine",
    "source_span",
    "sqflite",
    "sqflite_common",
    "string_scanner",
    "synchronized",
    "term_glyph",
    "typed_data",
    "uuid",
    "vector_math",
    "win32",
    "xdg_directories"
  ],
  "tags": [],
  "report": {
    "sections": [
      {
        "id": "convention",
        "title": "Follow Dart file conventions",
        "grantedPoints": 20,
        "maxPoints": 20,
        "status": "passed",
        "summary": "### [*] 10/10 points: Provide a valid `pubspec.yaml`\n\n\n### [*] 5/5 points: Provide a valid `README.md`\n\n\n### [*] 5/5 points: Provide a valid `CHANGELOG.md`\n"
      },
      {
        "id": "documentation",
        "title": "Provide documentation",
        "grantedPoints": 10,
        "maxPoints": 10,
        "status": "passed",
        "summary": "### [*] 10/10 points: Package has an example\n\n* Found example at: `example/lib/main.dart`"
      },
      {
        "id": "platform",
        "title": "Platform support",
        "grantedPoints": 20,
        "maxPoints": 20,
        "status": "passed",
        "summary": "### [*] 20/20 points: Supports 4 of 6 possible platforms (**iOS**, **Android**, **Web**, Windows, **MacOS**, Linux)\n\n* ✓ Android\n* ✓ iOS\n* ✓ MacOS\n* ✓ Web\n\nThese platforms are not supported:\n\n<details>\n<summary>\nPackage does not support platform `Windows`.\n</summary>\n\nBecause:\n* `package:audio_service/audio_service.dart` that declares support for platforms: `Android`, `iOS`, `macOS`, `Web`.\n</details>\n<details>\n<summary>\nPackage does not support platform `Linux`.\n</summary>\n\nBecause:\n* `package:audio_service/audio_service.dart` that declares support for platforms: `Android`, `iOS`, `macOS`, `Web`.\n</details>\n\nThese issues are present but do not affect the score, because they may not originate in your package:\n\n<details>\n<summary>\nPackage does not support platform `macOS`.\n</summary>\n\nBecause:\n* `package:audio_service/audio_service.dart` that imports:\n* `package:flutter_isolate/flutter_isolate.dart` that declares support for platforms: `Android`, `iOS`.\n</details>\n<details>\n<summary>\nPackage does not support platform `Web`.\n</summary>\n\nBecause:\n* `package:audio_service/audio_service.dart` that imports:\n* `package:flutter_isolate/flutter_isolate.dart` that declares support for platforms: `Android`, `iOS`.\n</details>"
      },
      {
        "id": "analysis",
        "title": "Pass static analysis",
        "grantedPoints": 0,
        "maxPoints": 30,
        "status": "failed",
        "summary": "### [x] 0/30 points: code has no errors, warnings, lints, or formatting issues\n\n<details>\n<summary>\nERROR: The method 'setMockMethodCallHandler' isn't defined for the type 'MethodChannel'.\n</summary>\n\n`lib/audio_service.dart:674:16`\n\n```\n    ╷\n674 │               .setMockMethodCallHandler(handler);\n    │                ^^^^^^^^^^^^^^^^^^^^^^^^\n    ╵\n```\n\nTo reproduce make sure you are using the [lints_core](https://pub.dev/packages/lints) and run `flutter analyze lib/audio_service.dart`\n</details>\n<details>\n<summary>\nERROR: The method 'setMockMethodCallHandler' isn't defined for the type 'MethodChannel'.\n</summary>\n\n`lib/audio_service.dart:1266:12`\n\n```\n     ╷\n1266 │           .setMockMethodCallHandler(handler);\n     │            ^^^^^^^^^^^^^^^^^^^^^^^^\n     ╵\n```\n\nTo reproduce make sure you are using the [lints_core](https://pub.dev/packages/lints) and run `flutter analyze lib/audio_service.dart`\n</details>"
      },
      {
        "id": "dependency",
        "title": "Support up-to-date dependencies",
        "grantedPoints": 10,
        "maxPoints": 20,
        "status": "failed",
        "summary": "### [x] 0/10 points: All of the package dependencies are supported in the latest version\n\n* Could not run `flutter pub outdated`: `dart pub get` failed:\n\n```\nOUT:\nResolving dependencies...\nERR:\nBecause audio_service requires the Flutter SDK, version solving failed.\n\nFlutter users should run `flutter pub get` instead of `dart pub get`.\n```\n\n### [*] 10/10 points: Package supports latest stable Dart and Flutter SDKs\n"
      },
      {
        "id": "null-safety",
        "title": "Support sound null safety",
        "grantedPoints": 20,
        "maxPoints": 20,
        "status": "passed",
        "summary": "### [*] 20/20 points: Package and dependencies are fully migrated to null safety!\n"
      }
    ]
  },
  "urlProblems": []
}
