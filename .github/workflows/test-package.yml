name: Dart CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  # Check code formatting and static analysis on a single OS (linux).
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [2.12.0]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  # Run tests on a matrix consisting of two dimensions:
  # 1. OS: ubuntu-latest, macos-latest, (windows-latest)
  # 2. release: 2.12.0
  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO(sigurdm): our end2end test creates longer filenames than we can
        # handle on windows. See https://github.com/dart-lang/sdk/issues/42416
        os: [ubuntu-latest, macos-latest]
        sdk: [2.12.0]
        flutter: [2.0.3]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: ${{ matrix.sdk }}
      - uses: subosito/flutter-action@v1.4.0
        with:
          flutter-version: ${{ matrix.flutter }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run VM tests
        # Run the tests -- include the default-skipped presubmit tests
        # Run with concurrency = 1 â€“ the build-test command edits files, which might
        #   crash other tests run in parallel
        run: FLUTTER_ROOT=$FLUTTER_HOME dart test --platform vm --run-skipped -j 1
        if: always() && steps.install.outcome == 'success'
