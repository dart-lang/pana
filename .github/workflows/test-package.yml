name: Dart CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  # Check code formatting and static analysis on a single OS (linux).
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [3.1.0]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - uses: dart-lang/setup-dart@b64355ae6ca0b5d484f0106a033dd1388965d06d
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub upgrade
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  # Run tests on a matrix consisting of two dimensions:
  # 1. OS: ubuntu-latest, macos-latest, (windows-latest)
  # 2. release: 2.12.4
  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO(sigurdm): our end2end test creates longer filenames than we can
        # handle on windows. See https://github.com/dart-lang/sdk/issues/42416
        os: [ubuntu-latest, macos-latest]
        sdk: [3.1.0]
        flutter: [3.13.1]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - uses: dart-lang/setup-dart@b64355ae6ca0b5d484f0106a033dd1388965d06d
        with:
          sdk: ${{ matrix.sdk }}
      - name: Setup Flutter
        run: |
          cd $HOME
          git clone https://github.com/flutter/flutter.git --depth 1 -b ${{ matrix.flutter }} _flutter
          echo "$HOME/_flutter/bin" >> $GITHUB_PATH
          cd $GITHUB_WORKSPACE
      - name: Check Flutter
        run: flutter --version --machine
      - id: install
        name: Install dependencies
        run: dart pub upgrade
      - name: Run VM tests
        # Run the tests -- include the default-skipped presubmit tests
        # Run with concurrency = 1 â€“ the build-test command edits files, which might
        #   crash other tests run in parallel
        run: dart test --platform vm --run-skipped -j 1
        if: always() && steps.install.outcome == 'success'

  # Runs tests on beta SDKs.
  beta_e2e_light:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - uses: dart-lang/setup-dart@b64355ae6ca0b5d484f0106a033dd1388965d06d
        with:
          sdk: '3.2.0-94.0.dev' # TODO: switch back to rolling 'dev' channel after it gets updated.
      - uses: subosito/flutter-action@cc97e1648fff6ca5cc647fa67f47e70f7895510b
        with:
          # flutter-version: '3.4.0-34.1.pre'
          channel: 'master' # TODO: switch back to rolling 'dev' channel after it gets updated.
      - name: Check Flutter
        run: flutter --version --machine
      - id: install
        name: Install dependencies
        run: dart pub upgrade
      - name: Run end2end light tests
        run: dart test --platform vm -j 1 test/end2end_light_test.dart
        if: always() && steps.install.outcome == 'success'
